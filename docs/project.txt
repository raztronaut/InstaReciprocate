# Instagram Analytics Tool

## Core Functionality
- Safely fetch and analyze Instagram following/follower data
- Cross-reference relationships to identify non-mutual follows
- Rate-limiting system to prevent API blocks
- Data persistence and session management

## Technical Implementation

### Authentication & Setup
- Use Instagram cookie-based auth (ds_user_id and csrftoken cookies)
- Verify Instagram hostname before initialization
- Implement session persistence
- Handle auth token refresh for API requests

### Data Fetching
1. Following List Retrieval
- Use Instagram GraphQL API endpoint with query_hash "3dec7e2c57367ef3da3d987d89f9dbc8"
- Paginate results with cursor-based navigation
- Fetch in batches of 24 users per request
- Handle pagination using end_cursor from page_info
- Store user nodes containing:
  - id
  - username 
  - full_name
  - profile_pic_url
  - is_verified
  - is_private
  - follows_viewer status

2. Followers List Retrieval  
- Similar GraphQL implementation as following
- Different query_hash needed for followers endpoint
- Same pagination and data structure
- Track total count for progress calculation

### Rate Limiting Implementation
1. Search/Fetch Cycles
- Default 1000ms between search requests (configurable)
- Random delay variation (70-100% of base delay)
- Force 10000ms pause after every 6 requests (configurable)
- Show user feedback during pauses via toast notifications
- Implement pause/resume functionality during scanning

2. Action Rate Limiting
- 4000ms base delay between unfollow actions 
- Random delay variation (100-120% of base delay) 
- Force 5 minute pause after every 5 unfollows 
- Display countdown during forced pauses
- Configurable timing parameters in settings menu

### Data Processing & State Management
- Cross-reference followers vs following lists
- Index users by ID for O(1) lookup
- Track scanning and unfollowing progress percentage
- Generate relationship categories:
  - Non-mutual followers
  - Mutual followers
  - Not following back
  - Recently unfollowed
- Implement filtering system:
  - Show/hide non-followers
  - Show/hide followers
  - Show/hide verified accounts
  - Show/hide private accounts
  - Show/hide accounts without profile pictures
- Search functionality by username/full name

### Storage & Persistence
- Cache API responses in localStorage
- Save whitelisted users (WHITELISTED_RESULTS_STORAGE_KEY)
- Store timing configurations
- Persist analysis results between sessions
- Save user preferences
- Implement copy list functionality

### Safety Features
- Graceful error handling for API limits
- Automatic pause/resume on rate limit detection
- User configurable timing parameters via settings menu
- Whitelist system to protect important follows
- Progress tracking and resumable operations
- Confirmation dialogs for destructive actions
- Warning messages for risky settings changes

### UI/UX Components
- Real-time progress indicators
  - Progress bar
  - Percentage complete
  - Current page indicators
- Filterable user lists with tabs
  - Non-whitelisted tab
  - Whitelisted tab
- Batch action support
  - Select all functionality
  - Batch unfollow
  - Current page selection
- Toast notifications for status updates
- Pause/Resume controls
- Custom timing configuration via settings
- User search functionality
- Alphabetical sorting of results
- Pagination controls
- Mobile-responsive design

## Key Differentiators
- Intelligent rate limiting with randomization
- Safe API interaction patterns
- Persistent data management
- Granular user control and filtering
- Transparent operation feedback
- Whitelist protection system
- Configurable safety parameters 